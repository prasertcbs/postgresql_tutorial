-- jsonb_path_query() requires PostgreSQL 12+
-- https://www.postgresql.org/docs/12/functions-json.html
-- สอน PostgreSQL: การดึงข้อมูลด้วย JSON Path
-- https://youtu.be/fnO9czcxyEQ

drop table if exists person;

CREATE TABLE person (
    id integer,
    info jsonb
);

INSERT INTO person VALUES (1, '{"age": 32, "gender": "M", "height": 1.78, "skills": {"computers": ["Word", "PowerPoint", "Excel"], "languages": [{"lang": "Korean", "level": 3}, {"lang": "Japanese", "level": 4}]}, "weight": 70, "address": {"city": "London", "postalCode": "630-0192", "streetAddress": "naist street"}, "hobbies": ["running", "swimming", "biking"], "lastName": "Bond", "firstName": "James", "phoneNumbers": [{"type": "work", "number": "07-007-8888"}, {"type": "home", "number": "0123-4567-8910"}]}');
INSERT INTO person VALUES (2, '{"age": 31, "gender": "F", "height": 1.6, "skills": {"computers": ["Photoshop", "Linux", "Excel", "PostgreSQL"], "languages": [{"lang": "English", "level": 3}, {"lang": "Chinese", "level": 4}, {"lang": "Korean", "level": 2}, {"lang": "French", "level": 1}]}, "weight": 48, "address": {"city": "New York", "postalCode": "630-0192", "streetAddress": "1st street"}, "hobbies": ["knitting", "swimming", "reading"], "lastName": "Foster", "firstName": "Jane", "phoneNumbers": [{"type": "mobile", "number": "089-123-4567"}, {"type": "home", "number": "02-567-3399"}, {"type": "work", "number": "02-432-4455"}]}');
INSERT INTO person VALUES (3, '{"age": 18, "gender": "M", "height": 1.65, "skills": {"computers": ["Python", "C"], "languages": [{"lang": "English", "level": 3}, {"lang": "Chinese", "level": 4}, {"lang": "Thai", "level": 5}]}, "weight": 60, "address": {"city": "New York", "postalCode": "567-1122", "streetAddress": "5th Avenue"}, "hobbies": ["cooking", "swimming"], "lastName": "Parker", "firstName": "Peter", "phoneNumbers": [{"type": "mobile", "number": "055-111-5599"}, {"type": "home", "number": "02-111-2233"}]}');

select * from person;

-- select * from person limit 1;

select jsonb_pretty(info) from person limit 5;

-- $ root object
-- @ current object

select jsonb_path_query(info,'$') from person;

select 
  jsonb_path_query(info,'$.firstName'),
  jsonb_path_query(info,'$.firstName')::text,
  jsonb_path_query(info,'$.firstName') #>> '{}', -- jsonb text to string
  jsonb_path_query(info,'$.age'),
  jsonb_path_query(info,'$.age')::int
  from person;

select 
  jsonb_path_query(info, '$.firstName'),
  jsonb_path_query(info, '$.phoneNumbers ?(@.type=="home")'),
  jsonb_path_query(info, '$.phoneNumbers ?(@.type=="home")."number"')
  from person;

select 
  jsonb_path_query(info, '$.firstName=="Jane"'),
  jsonb_path_query(info, '$ ?(@.firstName=="Jane")'),
  jsonb_path_query(info, '$ ?(@.firstName=="Jane")."phoneNumbers"'),
  jsonb_path_query(info, '$ ?(@.firstName=="Jane")')->'phoneNumbers'
  from person;

-- && and
select 
  jsonb_path_query(info, '$ ?(@.age < 30 && @.address.city=="New York")."firstName"'),
  info
  from person;

select
  info->>'firstName',
  jsonb_path_query(info, '$ ?(@.skills.computers=="Excel" && @.skills.languages.lang=="Japanese")."skills"'),
  jsonb_path_query(info, '$.skills ?(@.computers=="Excel" && @.languages.lang=="Japanese")')
  from person;

-- || or
select 
  jsonb_path_query(info, '$ ?(@.age < 30 || @.address.city=="New York")."firstName"'),
  info
  from person;

-- starts with
select 
  info->>'firstName',
  jsonb_path_query(info, '$ ?(@.firstName starts with "Ja")')
  from person;

-- like_regex
select 
  info->>'firstName',
  jsonb_path_query(info, '$ ?(@.firstName like_regex "^ja" flag "i")')
  from person;

-- calculation
select 
  (info->>'firstName') || ' ' || (info->>'lastName'),
  jsonb_path_query(info, '$.weight')::numeric(5,2),
  jsonb_path_query(info, '$.height')::numeric(5,2),
  jsonb_path_query(info, '$.weight / ($.height * $.height)')::numeric(5,2) bmi
  from person;

-- array
select
  info->>'firstName',
  info->'skills',
  jsonb_path_query(info, '$.skills'),
  jsonb_path_query(info, '$.skills.computers'),
  jsonb_path_query(info, '$.skills.computers.size()'),
  jsonb_path_query(info, '$.skills.computers[0]'),
  jsonb_path_query(info, '$.skills.computers[1]')
  from person;

select
  info->>'firstName',
  info->'skills',
  jsonb_path_query(info, '$.skills.languages'),
  jsonb_path_query(info, '$.skills.languages[0]'),
  jsonb_path_query(info, '$.skills.languages[0]."lang"')
  from person;

-- search array
select
  info->>'firstName',
  jsonb_path_query(info, '$.hobbies')
  from person;

select
  info->>'firstName',
  jsonb_path_query(info, '$ ?(@.hobbies == "cooking")."hobbies"'),
  jsonb_path_query(info, '$ ?(@.hobbies == "cooking")')->'hobbies'
  from person;

select
  info->>'firstName',
  info->'skills',
  jsonb_path_query(info, '$ ?(@.skills.computers == "Excel")'),
  jsonb_path_query(info, '$.skills.computers ?(@ == "Excel")'),
  jsonb_path_query(info, '$ ?(@.skills.computers == "Excel")."skills"'),
  jsonb_path_query(info, '$ ?(@.skills.computers == "Excel")."skills"."computers"')
  from person;

-- $ @
select
  info->>'firstName',
  jsonb_path_query(info, '$ ?(@.skills.languages.lang == "Korean" && @.skills.computers == "Linux")'),
  jsonb_path_query(info, '$ ?(@.skills.languages.lang == "Korean" && @.skills.computers == "Linux")."skills"'),
  jsonb_path_query(info, '$.skills ?(@.languages.lang == "Korean" && @.computers == "Linux")')
  from person;

-- comparison $, @
select
  info->>'firstName',
  jsonb_path_query(info, '$ ?(@.skills.computers == "Excel" || @.skills.computers == "Linux")."skills"."computers"')
  from person;

select
  info->>'firstName',
  jsonb_path_query(info, '$.skills.computers ?(@ == "Excel" || @ == "Linux")')
  from person;

select
  info->>'firstName',
  jsonb_path_query(info, '$.skills ?(@.computers == "Excel" || @.computers == "Linux")."computers"')
  from person;

select
  info->>'firstName',
  jsonb_path_query(info, '$.skills ?(@.computers == "Excel" || @.computers == "Linux")'),
  jsonb_path_query(info, '$.skills ?(@.computers == "Excel" || @.computers == "Linux")."computers"')
  from person;

-- parameter placeholder/passing parameter
select
  info->>'firstName',
  jsonb_path_query(info, '$.skills.computers ?(@ == "Excel")'),
  jsonb_path_query(info, '$.skills.computers ?(@ == $var)', '{"var": "Excel"}')
  from person;

select
  info->>'firstName',
  jsonb_path_query(info, '$.skills ?(@.languages.lang == $var1 && @.computers == $var2)', '{"var1": "Korean", "var2": "Linux"}')
  from person;

